name: Deploy ContractHub Frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggers

env:
  NODE_VERSION: '18'

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm install
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        CI: false  # Ignore warnings as errors
        
    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
        
    - name: 🚀 Deploy to S3
      run: |
        aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }} \
          --delete \
          --cache-control max-age=31536000 \
          --exclude "*.html" \
          --exclude "*.json"
        
        aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }} \
          --cache-control max-age=0 \
          --include "*.html" \
          --include "*.json"
          
    - name: 🌐 Invalidate CloudFront (if exists)
      if: secrets.CLOUDFRONT_DISTRIBUTION_ID != ''
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
          
    - name: ✅ Deployment complete
      run: |
        echo "🎉 Deployment successful!"
        echo "Website URL: https://${{ secrets.AWS_S3_BUCKET }}.s3-website-${{ secrets.AWS_REGION || 'us-east-1' }}.amazonaws.com"
