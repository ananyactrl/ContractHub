name: Deploy Frontend to AWS

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Archive dist
        run: tar -czf dist.tar.gz -C dist .

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.AWS_SSH_KEY }}

      - name: Known hosts
        run: ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: Upload artifacts to server
        run: scp dist.tar.gz ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:/tmp/contracthub-dist.tar.gz

      - name: Deploy on server
        run: |
          ssh ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOSSH'
          set -euo pipefail
          TARGET_DIR="${DEPLOY_TARGET_DIR:-/var/www/contracthub}"
          sudo mkdir -p "$TARGET_DIR"
          sudo tar -xzf /tmp/contracthub-dist.tar.gz -C "$TARGET_DIR"
          sudo rm -f /tmp/contracthub-dist.tar.gz
          if command -v systemctl >/dev/null 2>&1; then
            sudo systemctl reload nginx || true
          fi
          EOSSH
        env:
          DEPLOY_TARGET_DIR: ${{ secrets.DEPLOY_TARGET_DIR }}


